#
# Copyright 2012-2014 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#

#
# Active Directory configuration. 
#
# Optional sequence setup:
# - ad_bindFormat - bind format to use, default: sam, should be set to
#   realm if sasl is used.
# - ad_principalFormat - principal format as input. default: sam, should
#   be set to realm if authn is skipped in favour of other mechanism
#   such as mod_auth_kerb5.
# - ad_enable_gc - enable gc lookup, required for interforest group
#   resolution, pool name is gc.
#

include = <common.properties>

vars.SAM_GROUP_OBJECT = 268435456
vars.SAM_NON_SECURITY_GROUP_OBJECT = 268435457
vars.SAM_ALIAS_OBJECT = 536870912
vars.SAM_NON_SECURITY_ALIAS_OBJECT = 536870913
vars.SAM_USER_OBJECT = 805306368

vars.ad-principal-record = objectGUID, sAMAccountName, displayName, memberOf, department, givenName, sn, title, mail
vars.ad-group-record = objectGUID, sAMAccountName, description, memberOf

pool.authz.auth.type = simple
pool.gc.auth.type = simple
pool.gc.serverset.srvrecord.service = gc
pool.gc.serverset.single.port = 3268

attrmap.ad-map-namespace.attr.namespace.map = nCName

attrmap.map-principal-record.attr.PrincipalRecord_DN.map = _dn
attrmap.map-principal-record.attr.PrincipalRecord_ID.map = objectGUID
attrmap.map-principal-record.attr.PrincipalRecord_ID.conversion = BASE64
attrmap.map-principal-record.attr.PrincipalRecord_NAME.map = sAMAccountName
attrmap.map-principal-record.attr.PrincipalRecord_PRINCIPAL.map = sAMAccountName
attrmap.map-principal-record.attr.PrincipalRecord_PRINCIPAL.format = ${seq:_ad_principalAttributeFormat}
attrmap.map-principal-record.attr.PrincipalRecord_DISPLAY_NAME.map = displayName
attrmap.map-principal-record.attr.PrincipalRecord_GROUPS_RAW.map = memberOf
attrmap.map-principal-record.attr.PrincipalRecord_DEPARTMENT.map = department
attrmap.map-principal-record.attr.PrincipalRecord_FIRST_NAME.map = givenName
attrmap.map-principal-record.attr.PrincipalRecord_LAST_NAME.map = sn
attrmap.map-principal-record.attr.PrincipalRecord_TITLE.map = title
attrmap.map-principal-record.attr.PrincipalRecord_EMAIL.map = mail

attrmap.map-group-record.attr.GroupRecord_DN.map = _dn
attrmap.map-group-record.attr.GroupRecord_ID.map = objectGUID
attrmap.map-group-record.attr.GroupRecord_ID.conversion = BASE64
attrmap.map-group-record.attr.GroupRecord_NAME.map = sAMAccountName
attrmap.map-group-record.attr.GroupRecord_DISPLAY_NAME.map = description
attrmap.map-group-record.attr.GroupRecord_GROUPS_RAW.map = memberOf

auth-check.ad-authn.pool = authn
auth-check.ad-authn.reuse-connections = true
auth-check.ad-authn.user = ${seq:_ad_bind_user}
auth-check.ad-authn.password = ${seq:password}

search.ad-rootdse.pool = authz
search.ad-rootdse.search-request.baseDN =
search.ad-rootdse.search-request.scope = BASE
search.ad-rootdse.search-request.filter = &(objectClass=*)
search.ad-rootdse.search-request.attributes = defaultNamingContext, configurationNamingContext

search.ad-domain-by-base.pool = authz
search.ad-domain-by-base.search-request.baseDN = CN=Partitions,${seq:_ad_configDN}
search.ad-domain-by-base.search-request.filter = &(objectClass=crossRef)(nCName=${seq:_ad_baseDN_encoded})(nETBIOSName=*)
search.ad-domain-by-base.search-request.attributes = nETBIOSName, nCName, dnsRoot

search.ad-domain-by-domain.pool = authz
search.ad-domain-by-domain.search-request.baseDN = CN=Partitions,${seq:_ad_configDN}
search.ad-domain-by-domain.search-request.filter = &(objectClass=crossRef)(nETBIOSName=${seq:_ad_domain_candidate_encoded})(nCName=*)
search.ad-domain-by-domain.search-request.attributes = nETBIOSName, nCName, dnsRoot

search.ad-domain-by-realm.pool = authz
search.ad-domain-by-realm.search-request.baseDN = CN=Partitions,${seq:_ad_configDN}
search.ad-domain-by-realm.search-request.filter = &(objectClass=crossRef)(dnsRoot=${seq:_ad_realm_encoded})(nETBIOSName=*)(nCName=*)
search.ad-domain-by-realm.search-request.attributes = nETBIOSName, nCName, dnsRoot

search.ad-mapping-sam.pool = authz
search.ad-mapping-sam.search-request.baseDN = ${seq:_ad_baseDN}
search.ad-mapping-sam.search-request.filter = &(sAMAccountType=${global:vars.SAM_USER_OBJECT})(sAMAccountName=${seq:_ad_user_encoded})
search.ad-mapping-sam.search-request.attributes = ${global:vars.ad-principal-record}
search.ad-mapping-sam.attrmap = map-principal-record

search.ad-namespace.pool = authz
search.ad-namespace.search-request.baseDN = CN=Partitions,${seq:_ad_configDN}
search.ad-namespace.search-request.filter = &(objectClass=crossRef)(nETBIOSName=*)
search.ad-namespace.search-request.attributes = nCName
search.ad-namespace.attrmap = ad-map-namespace

search.ad-query-principals.pool = ${seq:_ad_pool}
search.ad-query-principals.search-request.baseDN = ${seq:_ad_baseDN}
search.ad-query-principals.search-request.filter = &(sAMAccountType=805306368)${seq:filter}
search.ad-query-principals.search-request.attributes = ${global:vars.ad-principal-record}
search.ad-query-principals.attrmap = map-principal-record

search.ad-query-groups.pool = ${seq:_ad_pool}
search.ad-query-groups.search-request.baseDN = ${seq:_ad_baseDN}
search.ad-query-groups.search-request.scope = ${seq:_ad_scope}
search.ad-query-groups.search-request.filter = &(|(sAMAccountType=${global:vars.SAM_GROUP_OBJECT})(sAMAccountType=${global:vars.SAM_NON_SECURITY_GROUP_OBJECT})(sAMAccountType=${global:vars.SAM_ALIAS_OBJECT})(sAMAccountType=${global:vars.SAM_NON_SECURITY_ALIAS_OBJECT}))${seq:filter}
search.ad-query-groups.search-request.attributes = ${global:vars.ad-group-record}
search.ad-query-groups.attrmap = map-group-record

auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_525 = CREDENTIALS_INVALID
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_52e = CREDENTIALS_INCORRECT
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_52f = ACCOUNT_RESTRICTION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_530 = ACCOUNT_TIME_VIOLATION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_531 = ACCOUNT_RESTRICTION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_532 = CREDENTIALS_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_533 = ACCOUNT_DISABLED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_701 = ACCOUNT_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_773 = CREDENTIALS_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C090334_775 = ACCOUNT_LOCKED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_525 = CREDENTIALS_INVALID
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_52e = CREDENTIALS_INCORRECT
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_52f = ACCOUNT_RESTRICTION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_530 = ACCOUNT_TIME_VIOLATION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_531 = ACCOUNT_RESTRICTION
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_532 = CREDENTIALS_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_533 = ACCOUNT_DISABLED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_701 = ACCOUNT_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_773 = CREDENTIALS_EXPIRED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.DSID-0C0903C5_775 = ACCOUNT_LOCKED
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS._comment = http://ldapwiki.willeke.com/wiki/Microsoft%20Response%20Codes
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.translation.pattern = ^(?<code>[0-9A-Fa-f]+): LdapErr: (?<err>[^, ]+), comment: (?<comment>[^,]+), data (?<data>[0-9A-Fa-f]+), v(?<version>[0-9A-Fa-f]+)$
auth-check.default.diagnostic.mapping.INVALID_CREDENTIALS.translation.replace = ${err}_${data}

sequence-init.init.500-ad-init-vars = ad-init-vars
sequence.ad-init-vars.010.description = set principal input format to authz, sam for regular, realm for kerb sso
sequence.ad-init-vars.010.condition.type = var-set
sequence.ad-init-vars.010.condition.not = true
sequence.ad-init-vars.010.condition.var-set.variable = ad_principalFormat
sequence.ad-init-vars.010.type = var-set
sequence.ad-init-vars.010.var-set.variable = ad_principalFormat
sequence.ad-init-vars.010.var-set.value = sam
sequence.ad-init-vars.020.description = set user format: sam for basic, realm for sasl
sequence.ad-init-vars.020.condition.type = var-set
sequence.ad-init-vars.020.condition.not = true
sequence.ad-init-vars.020.condition.var-set.variable = ad_bindFormat
sequence.ad-init-vars.020.type = var-set
sequence.ad-init-vars.020.var-set.variable = ad_bindFormat
sequence.ad-init-vars.020.var-set.value = sam

sequence-init.open.500-ad-open-pools = ad-open-pools
sequence.ad-open-pools.010.description = create authz pool
sequence.ad-open-pools.010.type = pool-create
sequence.ad-open-pools.010.pool-create.name = authz
sequence.ad-open-pools.020.description = create authn pool
sequence.ad-open-pools.020.condition.type = var-set
sequence.ad-open-pools.020.condition.var-set.variable = authn_enable
sequence.ad-open-pools.020.type = pool-create
sequence.ad-open-pools.020.pool-create.name = authn
sequence.ad-open-pools.030.description = create gc pool
sequence.ad-open-pools.030.condition.type = var-set
sequence.ad-open-pools.030.condition.var-set.variable = ad_enable_gc
sequence.ad-open-pools.030.type = pool-create
sequence.ad-open-pools.030.pool-create.name = gc

sequence-init.open.600-ad-open = ad-open-vars
sequence.ad-open-vars.010.description = root dse processing
sequence.ad-open-vars.010.type = fetch-record
sequence.ad-open-vars.010.fetch-record.search = ad-rootdse
sequence.ad-open-vars.010.fetch-record.map.defaultNamingContext.name = _ad_default_baseDN
sequence.ad-open-vars.010.fetch-record.map.configurationNamingContext.name = _ad_configDN
sequence.ad-open-vars.020.description = default domain
sequence.ad-open-vars.020.type = var-set
sequence.ad-open-vars.020.var-set.variable = _ad_baseDN
sequence.ad-open-vars.020.var-set.value = ${seq:_ad_default_baseDN}
sequence.ad-open-vars.030.description = default domain
sequence.ad-open-vars.030.type = fetch-record
sequence.ad-open-vars.030.fetch-record.search = ad-domain-by-base
sequence.ad-open-vars.030.fetch-record.map.nETBIOSName.name = _ad_default_domain
sequence.ad-open-vars.030.fetch-record.map.dnsRoot.name = _ad_default_realm

sequence.ad-set-default-domain.010.description = set default domain name
sequence.ad-set-default-domain.010.type = var-set
sequence.ad-set-default-domain.010.var-set.variable = _ad_domain
sequence.ad-set-default-domain.010.var-set.value = ${seq:_ad_default_domain}
sequence.ad-set-default-domain.020.description = set default domain dn
sequence.ad-set-default-domain.020.type = var-set
sequence.ad-set-default-domain.020.var-set.variable = _ad_baseDN
sequence.ad-set-default-domain.020.var-set.value = ${seq:_ad_default_baseDN}
sequence.ad-set-default-domain.030.type = var-set
sequence.ad-set-default-domain.030.var-set.variable = _ad_realm
sequence.ad-set-default-domain.030.var-set.value = ${seq:_ad_default_realm}

sequence.ad-set-principal-attribute-format-realm.040.description = set principal attribute conversion
sequence.ad-set-principal-attribute-format-realm.040.type = var-set
sequence.ad-set-principal-attribute-format-realm.040.var-set.variable = _ad_principalAttributeFormat
sequence.ad-set-principal-attribute-format-realm.040.var-set.value = %s@${seq:_ad_realm}

sequence.ad-set-principal-attribute-format-sam.040.description = set principal attribute conversion
sequence.ad-set-principal-attribute-format-sam.040.type = var-set
sequence.ad-set-principal-attribute-format-sam.040.var-set.variable = _ad_principalAttributeFormat
sequence.ad-set-principal-attribute-format-sam.040.var-set.value = ${seq:_ad_domain}\\%s

sequence.ad-resolve-user-realm.010.description = parse user and extract domain
sequence.ad-resolve-user-realm.010.type = regex
sequence.ad-resolve-user-realm.010.regex.value = ${seq:_ad_user}
sequence.ad-resolve-user-realm.010.regex.pattern = ^(?<user>[^@]+)@(?<realm>.*)$
sequence.ad-resolve-user-realm.010.regex.replacement._ad_user = ${user}
sequence.ad-resolve-user-realm.010.regex.replacement._ad_realm = ${realm}
sequence.ad-resolve-user-realm.020.description = fetch default domain
sequence.ad-resolve-user-realm.020.condition.type = var-set
sequence.ad-resolve-user-realm.020.condition.not = true
sequence.ad-resolve-user-realm.020.condition.var-set.variable = _ad_realm
sequence.ad-resolve-user-realm.020.type = call
sequence.ad-resolve-user-realm.020.call.name = ad-set-default-domain
sequence.ad-resolve-user-realm.030.description = fetch domain base
sequence.ad-resolve-user-realm.030.condition.type = var-set
sequence.ad-resolve-user-realm.030.condition.not = true
sequence.ad-resolve-user-realm.030.condition.var-set.variable = _ad_domain
sequence.ad-resolve-user-realm.030.type = fetch-record
sequence.ad-resolve-user-realm.030.fetch-record.search = ad-domain-by-realm
sequence.ad-resolve-user-realm.030.fetch-record.map.nETBIOSName.name = _ad_domain
sequence.ad-resolve-user-realm.030.fetch-record.map.nCName.name = _ad_baseDN
sequence.ad-resolve-user-realm.030.fetch-record.map.dnsRoot.name = _ad_realm

sequence.ad-resolve-user-sam.010.description = parse user and extract domain
sequence.ad-resolve-user-sam.010.type = regex
sequence.ad-resolve-user-sam.010.regex.value = ${seq:_ad_user}
sequence.ad-resolve-user-sam.010.regex.pattern = ^(?<domain>[^\\\\]+)\\\\(?<user>.*)$
sequence.ad-resolve-user-sam.010.regex.replacement._ad_user = ${user}
sequence.ad-resolve-user-sam.010.regex.replacement._ad_domain_candidate = ${domain}
sequence.ad-resolve-user-sam.020.description = fetch domain
sequence.ad-resolve-user-sam.020.condition.type = var-set
sequence.ad-resolve-user-sam.020.condition.not = true
sequence.ad-resolve-user-sam.020.condition.var-set.variable = _ad_domain_candidate
sequence.ad-resolve-user-sam.020.type = call
sequence.ad-resolve-user-sam.020.call.name = ad-set-default-domain
sequence.ad-resolve-user-sam.030.description = fetch domain base
sequence.ad-resolve-user-sam.030.condition.type = var-set
sequence.ad-resolve-user-sam.030.condition.var-set.variable = _ad_domain_candidate
sequence.ad-resolve-user-sam.030.type = fetch-record
sequence.ad-resolve-user-sam.030.fetch-record.search = ad-domain-by-domain
sequence.ad-resolve-user-sam.030.fetch-record.map.nETBIOSName.name = _ad_domain
sequence.ad-resolve-user-sam.030.fetch-record.map.nCName.name = _ad_baseDN
sequence.ad-resolve-user-sam.030.fetch-record.map.dnsRoot.name = _ad_realm

sequence.ad-resolve-user-error.010.description = error
sequence.ad-resolve-user-error.010.type = var-set
sequence.ad-resolve-user-error.010.var-set.variable = resultCode
sequence.ad-resolve-user-error.010.var-set.value = INVALID_CREDENTIALS
sequence.ad-resolve-user-error.020.description = error
sequence.ad-resolve-user-error.020.type = var-set
sequence.ad-resolve-user-error.020.var-set.variable = authTranslatedMessage
sequence.ad-resolve-user-error.020.var-set.value = CREDENTIALS_INVALID
sequence.ad-resolve-user-error.030.description = stop
sequence.ad-resolve-user-error.030.type = stop

sequence.ad-resolve-user.010-01.description = resolve user
sequence.ad-resolve-user.010-01.type = call
sequence.ad-resolve-user.010-01.call.name = ad-resolve-user-${seq:_ad_user_format}
sequence.ad-resolve-user.010-02.description = set principal format
sequence.ad-resolve-user.010-02.type = call
sequence.ad-resolve-user.010-02.call.name = ad-set-principal-attribute-format-${seq:ad_principalFormat}
sequence.ad-resolve-user.020.description = error if no _ad_domain
sequence.ad-resolve-user.020.condition.type = var-set
sequence.ad-resolve-user.020.condition.not = true
sequence.ad-resolve-user.020.condition.var-set.variable = _ad_domain
sequence.ad-resolve-user.020.type = call
sequence.ad-resolve-user.020.call.name = ad-resolve-user-error
sequence.ad-resolve-user.030.description = error if no _ad_baseDN
sequence.ad-resolve-user.030.condition.type = var-set
sequence.ad-resolve-user.030.condition.not = true
sequence.ad-resolve-user.030.condition.var-set.variable = _ad_baseDN
sequence.ad-resolve-user.030.type = call
sequence.ad-resolve-user.030.call.name = ad-resolve-user-error
sequence.ad-resolve-user.040.description = resolve user to dn
sequence.ad-resolve-user.040.type = fetch-record
sequence.ad-resolve-user.040.fetch-record.search = ad-mapping-sam
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_DN.name = PrincipalRecord_DN
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_ID.name = PrincipalRecord_ID
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_NAME.name = PrincipalRecord_NAME
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_PRINCIPAL.name = PrincipalRecord_PRINCIPAL
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_DISPLAY_NAME.name = PrincipalRecord_DISPLAY_NAME
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_GROUPS_RAW.name = PrincipalRecord_GROUPS_RAW
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_GROUPS_RAW.select = -1
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_DEPARTMENT.name = PrincipalRecord_DEPARTMENT
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_FIRST_NAME.name = PrincipalRecord_FIRST_NAME
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_LAST_NAME.name = PrincipalRecord_LAST_NAME
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_TITLE.name = PrincipalRecord_TITLE
sequence.ad-resolve-user.040.fetch-record.map.PrincipalRecord_EMAIL.name = PrincipalRecord_EMAIL
sequence.ad-resolve-user.050.description = error if no dn
sequence.ad-resolve-user.050.condition.type = var-set
sequence.ad-resolve-user.050.condition.not = true
sequence.ad-resolve-user.050.condition.var-set.variable = PrincipalRecord_DN
sequence.ad-resolve-user.050.type = call
sequence.ad-resolve-user.050.call.name = ad-resolve-user-error
sequence.ad-resolve-user.060.description = set namespace
sequence.ad-resolve-user.060.type = var-set
sequence.ad-resolve-user.060.var-set.variable = PrincipalRecord_NAMESPACE
sequence.ad-resolve-user.060.var-set.value = ${seq:_ad_baseDN}

sequence.authn.010.description = copy user
sequence.authn.010.type = var-set
sequence.authn.010.var-set.variable = _ad_user
sequence.authn.010.var-set.value = ${seq:user}
sequence.authn.020.description = set user format
sequence.authn.020.type = var-set
sequence.authn.020.var-set.variable = _ad_user_format
sequence.authn.020.var-set.value = ${seq:ad_bindFormat}
sequence.authn.030.description = resolve user
sequence.authn.030.type = call
sequence.authn.030.call.name = ad-resolve-user
sequence.authn.040.description = determine which user to use for bind
sequence.authn.040.condition.type = compare
sequence.authn.040.condition.compare.left = ${seq:ad_bindFormat}
sequence.authn.040.condition.compare.right = sam
sequence.authn.040.type = var-set
sequence.authn.040.var-set.variable = _ad_bind_user
sequence.authn.040.var-set.value = ${seq:_ad_domain}\\${seq:_ad_user}
sequence.authn.050.description = determine which user to use for bind
sequence.authn.050.condition.type = compare
sequence.authn.050.condition.compare.left = ${seq:ad_bindFormat}
sequence.authn.050.condition.compare.right = realm
sequence.authn.050.type = var-set
sequence.authn.050.var-set.variable = _ad_bind_user
sequence.authn.050.var-set.value = ${seq:_ad_user}@${seq:_ad_realm}
sequence.authn.060.description = auth check
sequence.authn.060.type = auth-check
sequence.authn.060.auth-check.name = ad-authn

sequence.namespace.010.description = namespace search
sequence.namespace.010.type = search-open
sequence.namespace.010.search-open.search = ad-namespace
sequence.namespace.010.search-open.variable = query

sequence.resolve-principal.010.description = copy principal
sequence.resolve-principal.010.type = var-set
sequence.resolve-principal.010.var-set.variable = _ad_user
sequence.resolve-principal.010.var-set.value = ${seq:PrincipalRecord_PRINCIPAL}
sequence.resolve-principal.020.description = set user format
sequence.resolve-principal.020.type = var-set
sequence.resolve-principal.020.var-set.variable = _ad_user_format
sequence.resolve-principal.020.var-set.value = ${seq:ad_principalFormat}
sequence.resolve-principal.030.description = resolve principal
sequence.resolve-principal.030.type = call
sequence.resolve-principal.030.call.name = ad-resolve-user

sequence.resolve-group.010.description = set base dn
sequence.resolve-group.010.type = var-set
sequence.resolve-group.010.var-set.variable = _ad_baseDN
sequence.resolve-group.010.var-set.value = ${seq:dn}
sequence.resolve-group.020.description = set scope
sequence.resolve-group.020.type = var-set
sequence.resolve-group.020.var-set.variable = _ad_scope
sequence.resolve-group.020.var-set.value = BASE
sequence.resolve-group.021.description = set pool
sequence.resolve-group.021.type = var-set
sequence.resolve-group.021.var-set.variable = _ad_pool
sequence.resolve-group.021.var-set.value = authz
sequence.resolve-group.030.description = fetch group
sequence.resolve-group.030.type = fetch-record
sequence.resolve-group.030.fetch-record.search = ad-query-groups
sequence.resolve-group.030.fetch-record.map.GroupRecord_DN.name = GroupRecord_DN
sequence.resolve-group.030.fetch-record.map.GroupRecord_ID.name = GroupRecord_ID
sequence.resolve-group.030.fetch-record.map.GroupRecord_NAME.name = GroupRecord_NAME
sequence.resolve-group.030.fetch-record.map.GroupRecord_DISPLAY_NAME.name = GroupRecord_DISPLAY_NAME
sequence.resolve-group.030.fetch-record.map.GroupRecord_GROUPS_RAW.name = GroupRecord_GROUPS_RAW
sequence.resolve-group.030.fetch-record.map.GroupRecord_GROUPS_RAW.select = -1

sequence.query-principals.010.description = set base as namespace
sequence.query-principals.010.type = var-set
sequence.query-principals.010.var-set.variable = _ad_baseDN
sequence.query-principals.010.var-set.value = ${seq:namespace}
sequence.query-principals.011.description = set pool
sequence.query-principals.011.type = var-set
sequence.query-principals.011.var-set.variable = _ad_pool
sequence.query-principals.011.var-set.value = authz
sequence.query-principals.012.description = set base
sequence.query-principals.012.type = var-set
sequence.query-principals.012.var-set.variable = _ad_baseDN
sequence.query-principals.012.var-set.value = ${seq:namespace}
sequence.query-principals.020.description = resolve domain
sequence.query-principals.020.type = fetch-record
sequence.query-principals.020.fetch-record.search = ad-domain-by-base
sequence.query-principals.020.fetch-record.map.nETBIOSName.name = _ad_domain
sequence.query-principals.020.fetch-record.map.dnsRoot.name = _ad_realm
sequence.query-principals.030.description = stop if no domain
sequence.query-principals.030.condition.type = var-set
sequence.query-principals.030.condition.not = true
sequence.query-principals.030.condition.var-set.variable = _ad_domain
sequence.query-principals.030.type = stop
sequence.query-principals.040.description = set principal format
sequence.query-principals.040.type = call
sequence.query-principals.040.call.name = ad-set-principal-attribute-format-${seq:ad_principalFormat}
sequence.query-principals.050.description = query principals
sequence.query-principals.050.type = search-open
sequence.query-principals.050.search-open.search = ad-query-principals
sequence.query-principals.050.search-open.variable = query

sequence.query-groups.010.description = set base dn
sequence.query-groups.010.type = var-set
sequence.query-groups.010.var-set.variable = _ad_baseDN
sequence.query-groups.010.var-set.value = ${seq:namespace}
sequence.query-groups.020.description = set scope
sequence.query-groups.020.type = var-set
sequence.query-groups.020.var-set.variable = _ad_scope
sequence.query-groups.020.var-set.value = SUB
sequence.query-groups.021.description = set pool
sequence.query-groups.021.type = var-set
sequence.query-groups.021.var-set.variable = _ad_pool
sequence.query-groups.021.var-set.value = authz
sequence.query-groups.030.description = query groups
sequence.query-groups.030.type = search-open
sequence.query-groups.030.search-open.search = ad-query-groups
sequence.query-groups.030.search-open.variable = query

sequence.complete-principal.010.description = execute only if gc lookup enabled
sequence.complete-principal.010.condition.type = var-set
sequence.complete-principal.010.condition.not = true
sequence.complete-principal.010.condition.var-set.variable = ad_enable_gc
sequence.complete-principal.010.type = stop
sequence.complete-principal.020.description = set base dn
sequence.complete-principal.020.type = var-set
sequence.complete-principal.020.var-set.variable = _ad_baseDN
sequence.complete-principal.020.var-set.value = ${seq:PrincipalRecord_DN}
sequence.complete-principal.030.description = set scope
sequence.complete-principal.030.type = var-set
sequence.complete-principal.030.var-set.variable = _ad_scope
sequence.complete-principal.030.var-set.value = BASE
sequence.complete-principal.040.description = set pool
sequence.complete-principal.040.type = var-set
sequence.complete-principal.040.var-set.variable = _ad_pool
sequence.complete-principal.040.var-set.value = gc
sequence.complete-principal.050.description = fetch group
sequence.complete-principal.050.type = fetch-record
sequence.complete-principal.050.fetch-record.search = ad-query-principals
sequence.complete-principal.050.fetch-record.map.PrincipalRecord_GROUPS_RAW.name = PrincipalRecord_GROUPS_RAW_EXTRA
sequence.complete-principal.050.fetch-record.map.PrincipalRecord_GROUPS_RAW.select = -1
sequence.complete-principal.060.description = append groups
sequence.complete-principal.060.type = var-list-append
sequence.complete-principal.060.var-list-append.variable = PrincipalRecord_GROUPS_RAW
sequence.complete-principal.060.var-list-append.left-variable = PrincipalRecord_GROUPS_RAW
sequence.complete-principal.060.var-list-append.right-variable = PrincipalRecord_GROUPS_RAW_EXTRA

sequence.complete-group.010.description = execute only if gc lookup enabled
sequence.complete-group.010.condition.type = var-set
sequence.complete-group.010.condition.not = true
sequence.complete-group.010.condition.var-set.variable = ad_enable_gc
sequence.complete-group.010.type = stop
sequence.complete-group.020.description = set base dn
sequence.complete-group.020.type = var-set
sequence.complete-group.020.var-set.variable = _ad_baseDN
sequence.complete-group.020.var-set.value = ${seq:GroupRecord_DN}
sequence.complete-group.030.description = set scope
sequence.complete-group.030.type = var-set
sequence.complete-group.030.var-set.variable = _ad_scope
sequence.complete-group.030.var-set.value = BASE
sequence.complete-group.040.description = set pool
sequence.complete-group.040.type = var-set
sequence.complete-group.040.var-set.variable = _ad_pool
sequence.complete-group.040.var-set.value = gc
sequence.complete-group.050.description = fetch group
sequence.complete-group.050.type = fetch-record
sequence.complete-group.050.fetch-record.search = ad-query-groups
sequence.complete-group.050.fetch-record.map.GroupRecord_GROUPS_RAW.name = GroupRecord_GROUPS_RAW_EXTRA
sequence.complete-group.050.fetch-record.map.GroupRecord_GROUPS_RAW.select = -1
sequence.complete-group.060.description = append groups
sequence.complete-group.060.type = var-list-append
sequence.complete-group.060.var-list-append.variable = GroupRecord_GROUPS_RAW
sequence.complete-group.060.var-list-append.left-variable = GroupRecord_GROUPS_RAW
sequence.complete-group.060.var-list-append.right-variable = GroupRecord_GROUPS_RAW_EXTRA
